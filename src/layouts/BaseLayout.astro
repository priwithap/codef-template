---
import BaseHead from "./BaseHead.astro";
import NavListItem from "@components/NavListItem.astro";
import pageSize from "src/config.js";
import config from "src/config.js";
export interface Props {
  title: string;
  description?: string;
  activeLink?: string;
}

const {
  title,
  description = "My blog",
  activeLink = null,
} = Astro.props as Props;
const { navLinks } = pageSize;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body>
    <a
      href="#main"
      class="absolute bg-info text-info-content px-6 py-2 rounded-br-md translate-x-[-100%] focus-within:translate-x-0 transition-all"
      >Skip navigation</a
    >
    

    <main id="main" class="container mx-auto">
      <slot />
    </main>

    
      <path
        d="M256 0C114.6 0 0 114.6 0 256c0 141.4 114.6 256 256 256s256-114.6 256-256C512 114.6 397.4 0 256 0zM382.6 254.6c-12.5 12.5-32.75 12.5-45.25 0L288 205.3V384c0 17.69-14.33 32-32 32s-32-14.31-32-32V205.3L174.6 254.6c-12.5 12.5-32.75 12.5-45.25 0s-12.5-32.75 0-45.25l103.1-103.1C241.3 97.4 251.1 96 256 96c4.881 0 14.65 1.391 22.65 9.398l103.1 103.1C395.1 221.9 395.1 242.1 382.6 254.6z"
      ></path>
    </svg>

  
    <style>
      html {
        --svg-totalLength: 844;
      }

      html[data-theme="night"] {
        --fill-color: 142 72% 29%;
        --stroke-color: 217 33% 17%;
        --hamburger-bg: 0 0% 30%;
        color-scheme: dark;
      }

      html[data-theme="light"] {
        --fill-color: 173 80% 40%;
        --stroke-color: 213 27% 84%;
        --hamburger-bg: 0 0% 70%;
        color-scheme: light;
      }

      /* Mobile Navigation */
      @media (max-width: 640px) {
        ul#primary-nav {
          position: fixed;
          inset: 0 0 0 30%;
          flex-direction: column;
          padding: min(30vh, 10rem) 2em;
          transform: translateX(100%);
          transition: transform 500ms ease-in-out;
          background: hsl(var(--hamburger-bg) / 0.5);
          backdrop-filter: blur(2rem);
        }

        ul#primary-nav[data-visible="true"] {
          transform: translateX(0);
        }

        label#nav-toggle {
          display: grid;
        }
      }

      /* Logo & Theme SVG color */
      header path {
        fill: hsl(var(--fill-color));
      }
      header polygon {
        fill: hsl(var(--er));
      }
    </style>

    <style is:global>
      ::selection {
        background-color: hsl(var(--a));
        color: hsl(var(--ac));
      }

      /* Scrollbar */
      ::-webkit-scrollbar {
        width: auto;
      }

      ::-webkit-scrollbar-track {
        background-color: hsl(var(--b3));
        border-radius: 100vmax;
        margin: 0.25rem;
      }

      ::-webkit-scrollbar-thumb {
        background-color: hsl(var(--bc));
        border-radius: 100vmax;
      }

      ::-webkit-scrollbar-thumb:hover {
        background-color: hsl(var(--bc) / 0.7);
        border-radius: 100vmax;
      }

      @supports (scrollbar-color: black white) {
        * {
          scrollbar-color: hsl(var(--bc)) hsl(var(--b3));
        }
      }
    </style>
    <script>
      // Navigation / Hamburger menu - control
      const nav = document.querySelector<HTMLUListElement>("#primary-nav");
      const navToggle = document.querySelector<HTMLLabelElement>("#nav-toggle");
      const navToggleInput =
        document.querySelector<HTMLInputElement>("#nav-toggle input");

      navToggle.addEventListener("change", () => {
        if (nav.getAttribute("data-visible") === "false") {
          nav.setAttribute("data-visible", "true");
          nav.setAttribute("aria-expanded", "true");
        } else if (nav.getAttribute("data-visible") === "true") {
          nav.setAttribute("data-visible", "false");
          nav.setAttribute("aria-expanded", "false");
        }
      });

      document.querySelector("main").addEventListener("click", () => {
        if (nav.getAttribute("data-visible") === "true") {
          nav.setAttribute("data-visible", "false");
          nav.setAttribute("aria-expanded", "false");
          navToggleInput.checked = !navToggleInput.checked;
        }
      });

      // Scroll To Top button - control
      const scrollButton = document.querySelector<SVGElement>("#scrollButton");
      scrollButton.addEventListener("click", () => {
        window.scroll({
          top: 0,
          left: 0,
          behavior: "smooth",
        });
      });
      window.addEventListener("scroll", () => {
        if (document.documentElement.scrollTop > window.innerHeight / 4) {
          scrollButton.style.display = "block";
        } else {
          scrollButton.style.display = "none";
        }
      });

      // Theme stuff
      import { themeChange } from "theme-change";
      themeChange();
      if (
        localStorage["theme"] === "light" ||
        document.querySelector("html").getAttribute("data-theme") === "light"
      ) {
        document.querySelector<HTMLInputElement>(
          "#themeSetting > input"
        ).checked = true;
      }
    </script>
  </body>
</html>
